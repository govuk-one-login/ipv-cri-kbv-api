AWSTemplateFormatVersion: "2010-09-09"
Description: Digital Identity IPV CRI KBV API
Transform: [AWS::Serverless-2016-10-31, AWS::LanguageExtensions] #TODO: LanguageExtensions must come before Serverless

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, localdev, build, staging, integration, production]
    ConstraintDescription: Must be dev, localdev, build, staging, integration or production
  LambdaDeploymentPreference:
    Type: String
    Default: AllAtOnce
    Description: >-
      Specifies the configuration to enable gradual Lambda deployments.
      It can be used to set deployment type, and also allows skipping canary deployment by setting to 'AllAtOnce'.
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: The ARN of the Code Signing Config to use, provided by the deployment pipeline
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: ""
  SecretPrefix:
    Description: Secrets name prefix
    Type: String
    Default: "none"
  AuditEventNamePrefix:
    Description: "The audit event name prefix"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/AuditEventNamePrefix"
  CriIdentifier:
    Description: "The unique credential issuer identifier"
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/common-cri-parameters/CriIdentifier"
  CommonStackName:
    Description: "The name of the stack containing the common CRI lambdas/infra"
    Type: String
    Default: common-cri-api
  TxmaStackName:
    Description: "The stack containing the TXMA infrastructure"
    Type: String
    Default: txma-infrastructure
  DeployAlarmsInDevEnvironment:
    Description: "Set to the string value `true` to deploy alarms in a DEV environment"
    Type: String
    Default: false

Conditions:
  UseSecretPrefix: !Not [!Equals [!Ref SecretPrefix, "none"]]
  UsePermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundary, ""]]
  UseCodeSigningConfigArn: !Not [!Equals [!Ref CodeSigningConfigArn, "none"]]
  UseCanaryDeploymentAlarms: !Not [!Equals [!Ref LambdaDeploymentPreference, AllAtOnce]]
  DeployAlarms: !Or
    - !Condition IsNotDevLikeEnvironment
    - !Equals [!Ref DeployAlarmsInDevEnvironment, "true"]
  IsDevEnvironment: !Or [!Equals [!Ref Environment, dev], !Condition IsLocalDevEnvironment]
  IsStubEnvironment: !Not [!Equals [!Ref Environment, production]]
  IsLocalDevEnvironment: !Equals [!Ref Environment, localdev]
  IsNotDevEnvironment: !Not [!Condition IsDevEnvironment]
  IsDevLikeEnvironment:
    !Or [!Condition IsLocalDevEnvironment, !Condition IsDevEnvironment]
  IsNotDevLikeEnvironment: !Not
    - !Condition IsDevLikeEnvironment

Globals:
  Function:
    VpcConfig:
      SecurityGroupIds: [!ImportValue cri-vpc-LambdaSecurityGroup]
      SubnetIds: !Split [",", !ImportValue cri-vpc-PrivateSubnets]
    PermissionsBoundary:
      !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
    CodeSigningConfigArn:
      !If [UseCodeSigningConfigArn, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]
    Tracing: Active
    Timeout: 30 # seconds
    Runtime: java21
    Architectures: [arm64]
    AutoPublishAlias: live
    SnapStart:
      ApplyOn: !FindInMap [ SnapStartMapping, Environment, !Ref Environment ]
    DeploymentPreference:
      Type: !Ref LambdaDeploymentPreference
      Role: !GetAtt CodeDeployServiceRole.Arn
    MemorySize: !FindInMap [MemorySizeMapping, Environment, !Ref Environment]
    Environment:
      Variables:
        AWS_STACK_NAME: !Ref AWS::StackName
        SECRET_PREFIX: !If [UseSecretPrefix, !Ref SecretPrefix , !Ref AWS::StackName]
        SQS_AUDIT_EVENT_PREFIX: !Ref AuditEventNamePrefix
        COMMON_PARAMETER_NAME_PREFIX: !Ref CommonStackName
        POWERTOOLS_METRICS_NAMESPACE: !Ref CriIdentifier
        POWERTOOLS_LOG_LEVEL: INFO
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}"
          - SecretArn: !FindInMap [EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn]
        DT_CONNECTION_BASE_URL: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}"
          - SecretArn: !FindInMap [EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn]
        DT_CLUSTER_ID: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}"
          - SecretArn: !FindInMap [EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}"
          - SecretArn: !FindInMap [EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn]
        DT_TENANT: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}"
          - SecretArn: !FindInMap [EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn]
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: "true"
        OTEL_INSTRUMENTATION_AWS_SDK_EXPERIMENTAL_USE_PROPAGATOR_FOR_MESSAGING: "true"
        OTEL_JAVA_GLOBAL_AUTOCONFIGURE_ENABLED: "true"
    Layers:
      - !Sub
        - "{{resolve:secretsmanager:${SecretArn}:SecretString:JAVA_LAYER}}"
        - SecretArn: !FindInMap [EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn]
  Api:
    TracingEnabled: true
    OpenApiVersion: 3.0.1
    MethodSettings:
      - LoggingLevel: INFO
        ResourcePath: /*
        HttpMethod: "*"
        DataTraceEnabled: true
        MetricsEnabled: true
        ThrottlingRateLimit: 200
        ThrottlingBurstLimit: 400
    AccessLogSetting:
      Format:
        Fn::ToJsonString:
          requestId: $context.requestId
          ip: $context.identity.sourceIp
          requestTime: $context.requestTime
          httpMethod: $context.httpMethod
          path: $context.path
          routeKey: $context.routeKey
          status: $context.status
          protocol: $context.protocol
          responseLatency: $context.responseLatency
          responseLength: $context.responseLength

Mappings:
  StaticVariables:
    Urls:
      SupportManualURL: "https://team-manual.account.gov.uk/teams/CRI-Orange-team/supporting-cri-orange/experian-kbv-credential-issuer-runbook/#experian-knowledge-based-verification-kbv-credential-issuer-runbook"

  EnvironmentConfiguration:
    dev:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    localdev:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    build:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    staging:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    integration:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    production:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables

  MemorySizeMapping:
    Environment:
      dev: 2048
      build: 3072
      staging: 2048
      integration: 2048
      production: 3072
      localdev: 2048

  SnapStartMapping:
    Environment:
      localdev: PublishedVersions
      dev: PublishedVersions
      build: PublishedVersions
      staging: PublishedVersions
      integration: PublishedVersions
      production: PublishedVersions

  IIQAPIDatabaseModeMapping:
    Environment:
      dev: Static
      build: Static
      staging: Static
      integration: Static
      production: Normal
      localdev: Static

  IIQOperatorIdMapping:
    Environment:
      dev: GDSCABINETUIIQ01U
      build: GDSCABINETUIIQ01U
      staging: GDSCABINETUIIQ01U
      integration: GDSCABINETUIIQ01U
      production: GDSCABINETUIIQ01U
      localdev: GDSCABINETUIIQ01U

  # Only numeric values should be assigned here
  MaxJwtTtlMapping:
    Environment:
      dev: 2
      build: 2
      staging: 6
      integration: 6
      production: 6
      localdev: 2

  # Permitted values: SECONDS,MINUTES,HOURS,DAYS,MONTHS,YEARS
  JwtTtlUnitMapping:
    Environment:
      dev: HOURS
      build: HOURS
      staging: MONTHS
      integration: MONTHS
      production: MONTHS
      localdev: HOURS

  VcContainsUniqueIdMapping:
    Environment:
      dev: true
      build: true
      staging: true
      integration: false
      production: false
      localdev: true

Resources:
  HealthCheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../lambdas/healthcheck
      Handler: uk.gov.di.ipv.cri.kbv.healthcheck.handler.HealthCheckHandler::handleRequest
      Environment:
        Variables:
          KeyStoreSecret: experian/keystore
          KeyStorePassword: experian/keystore-password
          WaspURLSecret: experian/iiq-wasp-service
      Policies:
        - Statement:
            Effect: Allow
            Action: secretsmanager:GetSecretValue
            Resource: !Sub
              - 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${Prefix}/experian*'
              - Prefix: !If [ UseSecretPrefix, !Ref SecretPrefix , !Ref AWS::StackName ]

  HealthCheckFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${HealthCheckFunction}"
      RetentionInDays: 30

  HealthCheckFunctionLogGroupSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref HealthCheckFunctionLogGroup

  HealthCheckFunctionnAliasPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref HealthCheckFunction.Alias
      Principal: apigateway.amazonaws.com

  PublicKBVApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub kbv-cri-${AWS::StackName}
      Description: Public KBV CRI API
      StageName: !Ref Environment
      AccessLogSetting:
        DestinationArn: !GetAtt PublicKBVApiAccessLogGroup.Arn
      DefinitionBody:
        openapi: 3.0.1
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { }
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./public-api.yaml
      EndpointConfiguration:
        Type: REGIONAL
      Auth:
        ResourcePolicy:
          CustomStatements:
            - Effect: Deny
              Principal: "*"
              Action: execute-api:Invoke
              Resource:
                - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/${Environment}/GET/healthcheck/thirdparty*"
              Condition:
                NotIpAddress:
                  aws:SourceIp:
                    - "217.196.229.77/32"
                    - "217.196.229.79/32"
                    - "217.196.229.80/32"
                    - "217.196.229.81/32"
                    - "51.149.8.0/25"
                    - "51.149.8.128/29"

            - Effect: Allow
              Principal: "*"
              Action: execute-api:Invoke
              Resource: "execute-api:/*"

  PrivateKBVApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub kbv-cri-private-${AWS::StackName}
      Description: Private KBV CRI API
      StageName: !Ref Environment
      AccessLogSetting:
        DestinationArn: !GetAtt PrivateKBVApiAccessLogGroup.Arn
      DefinitionBody:
        openapi: 3.0.1
        paths: # workaround to get `sam validate` to work
          /never-created:
            options: { }
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: ./private-api.yaml
      EndpointConfiguration:
        Type: !If [IsLocalDevEnvironment, REGIONAL, PRIVATE]
      Auth:
        ResourcePolicy:
          CustomStatements:
            #FIXME: Workaround for incorrect order of transforms - need at least one policy in the list
            - Effect: Allow
              Resource: execute-api:/*
              Action: execute-api:Invoke
              Principal: "*"
            - !If
              - IsLocalDevEnvironment
              - !Ref AWS::NoValue
              - Effect: Deny
                Resource: execute-api:/*
                Action: execute-api:Invoke
                Principal: "*"
                Condition:
                  StringNotEquals:
                    aws:SourceVpce: !ImportValue cri-vpc-ApiGatewayVpcEndpointId

  PublicKBVApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PublicKBVApi}-public-AccessLogs
      RetentionInDays: 30

  PublicKBVApiAccessLogGroupSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref PublicKBVApiAccessLogGroup

  PrivateKBVApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-${PrivateKBVApi}-private-AccessLogs
      RetentionInDays: 30

  PrivateKBVApiAccessLogGroupSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref PrivateKBVApiAccessLogGroup

  KBVQuestionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../lambdas/question
      Handler: uk.gov.di.ipv.cri.kbv.api.handler.QuestionHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-question"
          SQS_AUDIT_EVENT_QUEUE_URL:
            Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueUrl
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref ExperianKBVQuestionFunctionCanaryErrors, !Ref ExperianKBVQuestionFunction5xxCanaryErrors]
          - [!Ref AWS::NoValue]
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Ref KBVTable
        - DynamoDBWritePolicy:
            TableName: !Ref KBVTable
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBWritePolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - SQSSendMessagePolicy:
            QueueName:
              Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueName
        - KMSDecryptPolicy:
            KeyId: !ImportValue core-infrastructure-CriDecryptionKey1Id
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTtl"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/PersonIdentityTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/KBVTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/IIQDatabaseMode"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/IIQStrategy"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/IIQOperatorId"
        - Statement:
            - Sid: ReadSecretsPolicy
              Effect: Allow
              Action:
                - 'secretsmanager:GetSecretValue'
              Resource: !Sub
                - 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${Prefix}/experian*'
                - Prefix: !If [UseSecretPrefix, !Ref SecretPrefix , !Ref AWS::StackName]
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"
        - Statement:
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueEncryptionKeyArn

  KBVQuestionFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${KBVQuestionFunction}"
      RetentionInDays: 30

  KBVQuestionFunctionLogGroupSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref KBVQuestionFunctionLogGroup

  KBVAnswerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../lambdas/answer
      Handler: uk.gov.di.ipv.cri.kbv.api.handler.QuestionAnswerHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-answer"
          SQS_AUDIT_EVENT_QUEUE_URL:
            Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueUrl
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref ExperianKBVAnswerFunctionCanaryErrors, !Ref ExperianKBVAnswerFunction5xxCanaryErrors]
          - [!Ref AWS::NoValue]
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Ref KBVTable
        - DynamoDBWritePolicy:
            TableName: !Ref KBVTable
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBWritePolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - SQSSendMessagePolicy:
            QueueName:
              Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueName
        - KMSDecryptPolicy:
            KeyId: !ImportValue core-infrastructure-CriDecryptionKey1Id
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTtl"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/PersonIdentityTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/KBVTableName"
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/IIQDatabaseMode"
        - Statement:
            - Sid: ReadSecretsPolicy
              Effect: Allow
              Action:
                - 'secretsmanager:GetSecretValue'
              Resource: !Sub
                - 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${Prefix}/experian*'
                - Prefix: !If [UseSecretPrefix, !Ref SecretPrefix , !Ref AWS::StackName]
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParametersByPath
              Resource:
                - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/clients/*"
        - Statement:
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueEncryptionKeyArn

  KBVAnswerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${KBVAnswerFunction}"
      RetentionInDays: 30

  KBVAnswerFunctionLogGroupSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref KBVAnswerFunctionLogGroup

  KBVAbandonFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../../lambdas/abandon
      Handler: uk.gov.di.ipv.cri.kbv.api.handler.AbandonKbvHandler::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-abandon"
          SQS_AUDIT_EVENT_QUEUE_URL:
            Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueUrl
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref ExperianKBVAbandonFunctionCanaryErrors, !Ref ExperianKBVAbandonFunction5xxCanaryErrors]
          - [!Ref AWS::NoValue]
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - SQSSendMessagePolicy:
            QueueName:
              Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueName
        - DynamoDBReadPolicy:
            TableName: !Ref KBVTable
        - DynamoDBWritePolicy:
            TableName: !Ref KBVTable
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBWritePolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameter
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/KBVTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
        - Statement:
            - Sid: auditEventQueueKmsEncryptionKeyPermission
              Effect: Allow
              Action:
                - kms:Decrypt
                - kms:GenerateDataKey
              Resource:
                Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueEncryptionKeyArn

  KBVAbandonFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${KBVAbandonFunction}"
      RetentionInDays: 30

  KBVAbandonFunctionLogGroupSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref KBVAbandonFunctionLogGroup

  IssueCredentialFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: uk.gov.di.ipv.cri.kbv.api.handler.IssueCredentialHandler::handleRequest
      CodeUri: ../../lambdas/issuecredential
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: !Sub "${CriIdentifier}-issuecredential"
          SQS_AUDIT_EVENT_QUEUE_URL:
            Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueUrl
      DeploymentPreference:
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref ExperianKBVIssueCredentialFunctionCanaryErrors, !Ref ExperianKBVIssueCredentialFunction5xxCanaryErrors]
          - [!Ref AWS::NoValue]
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSXrayWriteOnlyAccess
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/SessionTableName}}"
        - DynamoDBReadPolicy:
            TableName: !Ref KBVTable
        - DynamoDBReadPolicy:
            TableName: !Sub "{{resolve:ssm:/${CommonStackName}/PersonIdentityTableName}}"
        - Statement:
            Effect: Allow
            Action:
              - "kms:Sign"
            Resource: !ImportValue core-infrastructure-CriVcSigningKey1Arn
        - SQSSendMessagePolicy:
            QueueName:
              Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueName
        - Statement:
            Effect: Allow
            Action:
              - ssm:GetParameter
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/KBVTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/verifiableCredentialKmsSigningKeyId"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/MaxJwtTtl"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/JwtTtlUnit"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/SessionTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/PersonIdentityTableName"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${CommonStackName}/verifiable-credential/issuer"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/kbv-cri-api-v1/quality/mappings"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/release-flags/vc-expiry-removed"
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/release-flags/vc-contains-unique-id"
        - Statement:
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource:
              Fn::ImportValue: !Sub ${TxmaStackName}-AuditEventQueueEncryptionKeyArn

  IssueCredentialFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${IssueCredentialFunction}"
      RetentionInDays: 30

  IssueCredentialFunctionLogGroupSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevEnvironment
    Properties:
      DestinationArn: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython"
      FilterPattern: ""
      LogGroupName: !Ref IssueCredentialFunctionLogGroup

  KBVTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "kbv-${AWS::StackName}"
      BillingMode: "PAY_PER_REQUEST"
      AttributeDefinitions:
        - AttributeName: "sessionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "sessionId"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: expiryDate
        Enabled: true

  PublicApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Condition: IsNotDevEnvironment
    Properties:
      ApiStages:
        - ApiId: !Ref PublicKBVApi
          Stage: !Ref PublicKBVApi.Stage
      Quota:
        Limit: 500000
        Period: DAY
      Throttle:
        BurstLimit: 200 # requests the API can handle concurrently
        RateLimit: 400 # allowed requests per second

  PrivateApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Condition: IsNotDevEnvironment
    Properties:
      ApiStages:
        - ApiId: !Ref PrivateKBVApi
          Stage: !Ref PrivateKBVApi.Stage
      Quota:
        Limit: 500000
        Period: DAY
      Throttle:
        BurstLimit: 200 # requests the API can handle concurrently
        RateLimit: 400 # allowed requests per second

  LinkUsagePlanApiKey1:
    Condition: IsNotDevEnvironment
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !ImportValue core-infrastructure-ApiKey1
      KeyType: API_KEY
      UsagePlanId: !Ref PublicApiUsagePlan

  LinkUsagePlanApiKey2:
    Condition: IsNotDevEnvironment
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !ImportValue core-infrastructure-ApiKey2
      KeyType: API_KEY
      UsagePlanId: !Ref PublicApiUsagePlan

  ParameterKBVItemTableName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/KBVTableName"
      Value: !Sub kbv-${AWS::StackName}
      Type: String
      Description: kbv item dynamodb table name

  MaxJwtTtlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/MaxJwtTtl"
      Type: String
      Value: !FindInMap [MaxJwtTtlMapping, Environment, !Ref 'Environment']
      Description: default time to live for an JWT in (seconds)

  JwtTtlUnitParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/JwtTtlUnit"
      Type: String
      Value: !FindInMap [ JwtTtlUnitMapping, Environment, !Ref Environment ]
      Description: The unit for the time-to-live for an JWT e.g. (MONTHS)

  IIQAPIDatabaseModeParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/IIQDatabaseMode"
      Type: String
      Value: !FindInMap [ IIQAPIDatabaseModeMapping, Environment, !Ref 'Environment' ]
      Description: "one of: S or Static, A or Aged, N or Normal (Live)"

  IIQAPIStrategyParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/IIQStrategy"
      Type: String
      Value:
        Fn::ToJsonString:
          "1": "2 out of 3 prioritised"
          "2": "3 out of 4 prioritised"
      Description: Strategy to be used for Experian KBV Questions. Example - 3 of 4

  IIQOperatorIdParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/IIQOperatorId"
      Type: String
      Value: !FindInMap [ IIQOperatorIdMapping, Environment, !Ref 'Environment' ]
      Description: Unique operator id provided by Experian to GDS

  IPVCoreStubAuthenticationAlgParameter:
    Condition: IsStubEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/clients/ipv-core-stub/jwtAuthentication/authenticationAlg"
      Type: String
      Value: ES256

  VerifiableCredentialKmsSigningKeyParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/verifiableCredentialKmsSigningKeyId"
      Type: String
      Value: !ImportValue core-infrastructure-CriVcSigningKey1Id
      Description: Verifiable Credential Key Id

  PublicKBVApiGatewayIdParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/PublicKBVApiGatewayId"
      Type: String
      Value: !Sub "${PublicKBVApi}"
      Description: "API GatewayID of the public KBV CRI API"

  PublicKBVApiBaseUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/PublicKBVApiBaseUrl"
      Type: String
      Value: !Sub "https://${PublicKBVApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
      Description: "Base url of the public KBV CRI API"

  ReleaseFlagsVcContainsUniqueIdParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/${AWS::StackName}/release-flags/vc-contains-unique-id"
      Type: String
      Value: !FindInMap [ VcContainsUniqueIdMapping, Environment, !Ref Environment ]
      Description: Verifiable Credential Contains UniqueId Mapping

  KBVQuestionFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt KBVQuestionFunction.Arn
      Principal: apigateway.amazonaws.com

  KBVAnswerFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt KBVAnswerFunction.Arn
      Principal: apigateway.amazonaws.com

  KBVAbandonFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt KBVAbandonFunction.Arn
      Principal: apigateway.amazonaws.com

  IssueCredentialFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt IssueCredentialFunction.Arn
      Principal: apigateway.amazonaws.com

  KBVQuestionFunctionAliasPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref KBVQuestionFunction.Alias
      Principal: apigateway.amazonaws.com

  KBVAnswerFunctionAliasPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref KBVAnswerFunction.Alias
      Principal: apigateway.amazonaws.com

  KBVAbandonFunctionAliasPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref KBVAbandonFunction.Alias
      Principal: apigateway.amazonaws.com

  IssueCredentialFunctionAliasPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref IssueCredentialFunction.Alias
      Principal: apigateway.amazonaws.com

  LoggingKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn": !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"

  ExperianKBVLambdaErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-ExperianKBVLambdaErrors
      AlarmDescription: !Sub
        - "Experian KBV ${Environment} lambda errors. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions: []
      Period: 300
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  ExperianKBVAPIGW5XXErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-ExperianKBVAPIGW5XXErrors
      AlarmDescription: !Sub
        - "Experian KBV ${Environment} API Gateway 5XX errors. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: e1
          Label: Expression1
          ReturnData: true
          Expression: SUM(METRICS())
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub kbv-cri-${AWS::StackName}
            Period: 300
            Stat: Sum
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub kbv-cri-private-${AWS::StackName}
            Period: 300
            Stat: Sum

  SessionLambdaFailedToVerifyJWTAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmDescription: !Sub
        - "Errors verifying JWTs that have been been received by the session lambda. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        # - !ImportValue core-infrastructure-AlarmTopic # OJ-3243: turning off pager duty notifications while we are seeing false positives
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        # - !ImportValue core-infrastructure-AlarmTopic # OJ-3243: turning off pager duty notifications while we are seeing false positives
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      MetricName: jwt_verification_failed
      AlarmName: !Sub ${AWS::StackName}-${Environment}-SessionLambdaFailedToVerifyJWTAlarm
      Namespace: !Sub "${CriIdentifier}"
      Statistic: Sum
      Dimensions:
        - Name: service
          Value: !Sub "${CriIdentifier}-sessionTS"
      Period: 300
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  TokenLambdaFailedToVerifyJWTAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmDescription: !Sub
        - "Errors verifying JWTs that have been been received by the token lambda. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        # - !ImportValue core-infrastructure-AlarmTopic # OJ-3243: turning off pager duty notifications while we are seeing false positives
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        # - !ImportValue core-infrastructure-AlarmTopic # OJ-3243: turning off pager duty notifications while we are seeing false positives
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      MetricName: jwt_verification_failed
      AlarmName: !Sub ${AWS::StackName}-${Environment}-TokenLambdaFailedToVerifyJWTAlarm
      Namespace: !Sub "${CriIdentifier}"
      Statistic: Sum
      Dimensions:
        - Name: service
          Value: !Sub "${CriIdentifier}-access-token-2"
      Period: 300
      DatapointsToAlarm: 3
      EvaluationPeriods: 3
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  ExperianKBVQuestionFunction5xxCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Experian KBV QuestionFunction Lambda returning 5xx response."
      AlarmName: !Sub ${AWS::StackName}-${Environment}-ExperianKBVQuestionFunction5xxCanaryError
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Sub "kbv-cri-private-${AWS::StackName}"
        - Name: Method
          Value: GET
        - Name: Resource
          Value: /question
        - Name: Stage
          Value: !Ref Environment
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 2
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ExperianKBVQuestionFunctionCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Experian KBV QuestionFunction Lambda error."
      AlarmName: !Sub ${AWS::StackName}-${Environment}-ExperianKBVQuestionFunctionCanaryError
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub ${KBVQuestionFunction}:live
        - Name: FunctionName
          Value: !Ref KBVQuestionFunction
        - Name: ExecutedVersion
          Value: !GetAtt KBVQuestionFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ExperianKBVAnswerFunction5xxCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Experian KBV AnswerFunction Lambda returning 5xx response."
      AlarmName: !Sub ${AWS::StackName}-${Environment}-ExperianKBVAnswerFunction5xxCanaryError
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Sub "kbv-cri-private-${AWS::StackName}"
        - Name: Method
          Value: POST
        - Name: Resource
          Value: /answer
        - Name: Stage
          Value: !Ref Environment
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ExperianKBVAnswerFunctionCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Experian KBV AnswerFunction Lambda error."
      AlarmName: !Sub ${AWS::StackName}-${Environment}-ExperianKBVAnswerFunctionCanaryError
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub ${KBVAnswerFunction}:live
        - Name: FunctionName
          Value: !Ref KBVAnswerFunction
        - Name: ExecutedVersion
          Value: !GetAtt KBVAnswerFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      
  ExperianKBVAbandonFunction5xxCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Experian KBV AbandonFunction Lambda returning 5xx response."
      AlarmName: !Sub ${AWS::StackName}-${Environment}-ExperianKBVAbandonFunction5xxCanaryError
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Sub "kbv-cri-private-${AWS::StackName}"
        - Name: Method
          Value: POST
        - Name: Resource
          Value: /abandon
        - Name: Stage
          Value: !Ref Environment
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ExperianKBVAbandonFunctionCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Experian KBV Abandon Lambda error."
      AlarmName: !Sub ${AWS::StackName}-${Environment}-ExperianKBVAbandonFunctionCanaryError
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub ${KBVAbandonFunction}:live
        - Name: FunctionName
          Value: !Ref KBVAbandonFunction
        - Name: ExecutedVersion
          Value: !GetAtt KBVAbandonFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ExperianKBVIssueCredentialFunction5xxCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Experian KBV IssueCredentialFunction Lambda returning 5xx response."
      AlarmName: !Sub ${AWS::StackName}-${Environment}-ExperianKBVIssueCredentialFunction5xxCanaryError
      Namespace: AWS/ApiGateway
      MetricName: 5XXError
      Dimensions:
        - Name: ApiName
          Value: !Sub "kbv-cri-${AWS::StackName}"
        - Name: Method
          Value: POST
        - Name: Resource
          Value: /credential/issue
        - Name: Stage
          Value: !Ref Environment
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ExperianKBVIssueCredentialFunctionCanaryErrors:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Experian KBV IssueCredential Lambda error."
      AlarmName: !Sub ${AWS::StackName}-${Environment}-ExperianKBVIssueCredentialFunctionCanaryError
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub ${IssueCredentialFunction}:live
        - Name: FunctionName
          Value: !Ref IssueCredentialFunction
        - Name: ExecutedVersion
          Value: !GetAtt IssueCredentialFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
      PermissionsBoundary: !If [UsePermissionsBoundary, !Ref PermissionsBoundary,!Ref AWS::NoValue]

  JWKSBucketRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: AccessJWKSJson
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:Get*"
                Resource: !Sub
                  - "arn:aws:s3:::govuk-one-login-kbv-published-keys-${env}/jwks.json"
                  - env: !If [IsLocalDevEnvironment, "dev", !Ref Environment]
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Tags:
        - Key: "key_consumer_type"
          Value: "use"

  JsonWebKeys5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-${Environment}-JsonWebKeys5XXApiGwErrorAlarm"
      AlarmDescription: !Sub
        - "${AWS::StackName}-PublicKBVApi - There has been a small proportion of 5XX errors on the JsonWebKeys endpoint. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-PublicKBVApiGatewayId
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-PublicKBVApiGatewayId
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum

  JsonWebKeys5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-JsonWebKeys5XXApiGwErrorCriticalAlarm"
      AlarmDescription: !Sub
        - "${AWS::StackName}-PublicKBVApi - There has been a significant proportion of 5XX errors on the JsonWebKeys endpoint. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      AlarmActions:
        - !ImportValue core-infrastructure-AlarmTopic
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-PublicKBVApiGatewayId
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: Method
                  Value: GET
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-PublicKBVApiGatewayId
                - Name: Stage
                  Value: !Ref Environment
                - Name: Resource
                  Value: /.well-known/jwks.json
            Period: 60
            Stat: Sum

  JsonWebKeys4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub "${AWS::StackName}-JsonWebKeys4XXApiGwErrorAlarm"
      AlarmDescription: !Sub
        - "${AWS::StackName}-PublicKBVApiGateway - There has been a small proportion of 4XX errors on the JsonWebKeys endpoint. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<3 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-PublicKBVApiGatewayId
                - Name: Resource
                  Value: /.well-known/jwks.json
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-PublicKBVApiGatewayId
                - Name: Resource
                  Value: /.well-known/jwks.json
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

Outputs:
  PublicKBVApiGatewayId:
    Description: "API GatewayID of the public KBV CRI API"
    Value: !Sub "${PublicKBVApi}"
    Export:
      Name: !Sub ${AWS::StackName}-PublicKBVApiGatewayId

  PrivateKBVApiGatewayId:
    Description: "API GatewayID of the private KBV CRI API"
    Value: !Ref PrivateKBVApi
    Export:
      Name: !Sub ${AWS::StackName}-PrivateKBVApiGatewayId

  KBVApiGatewayId:
    Description: "API GatewayID of the KBV CRI API - export currently used by dns-records stack"
    Value: !Sub "${PublicKBVApi}"
    Export:
      Name: !Sub ${AWS::StackName}-KBVApiGatewayId
