plugins {
	id "java"
	id "org.sonarqube" version "4.4.+"
	id "com.diffplug.spotless" version "6.25.+"
}

ext {
	dependencyVersions = [
		aws_lambda_events_version: "3.14.0",
		jackson_version          : "2.15.4",
		nimbusds_oauth_version   : "11.2",
		nimbusds_jwt_version     : "9.48",
		protobuf_version         : "3.19.4",
		junit                    : "5.10.2",
		mockito					 : "4.3.1",
		glassfish_version        : "3.0.3",
		powertools_version       : "1.12.3",
		cri_common_lib           : "3.6.0",
		pact_provider_version    : "4.5.11",
		webcompere_version       : "2.1.6",
	]
}

repositories {
	maven {
		url 'https://gds.jfrog.io/artifactory/di-allowed-repos'
	}
}

subprojects {
	apply plugin: 'java'

	java {
		sourceCompatibility = JavaVersion.VERSION_11
		targetCompatibility = JavaVersion.VERSION_11
	}

	repositories {
		maven {
			url 'https://gds.jfrog.io/artifactory/di-allowed-repos'
		}
	}

	configurations {
		aws
		dynamodb
		cache
		jackson
		tests
		test_runtime
		logging_runtime
		lambda
		sqs
		powertools
		hibernate
		nimbus
		soap
		kms
		mockito
		lambda_tests
		lettuce
		ssm
		cri_common_lib
		pact_tests
		webcompere
	}

	// The dynamodb enhanced package loads the apache-client as well as the spi-client, so
	// we need to add the apache-client to the dependencies exclusion to not get a mismatch
	configurations.all {
		exclude group:"software.amazon.awssdk", module: "apache-client"
	}

	dependencies {

		aws platform('software.amazon.awssdk:bom:2.20.162')

		dynamodb "software.amazon.awssdk:dynamodb",
				"software.amazon.awssdk:dynamodb-enhanced"

		lambda "software.amazon.awssdk:lambda",
				"com.amazonaws:aws-lambda-java-events:${dependencyVersions.aws_lambda_events_version}"

		sqs "software.amazon.awssdk:sqs"

		kms "software.amazon.awssdk:kms"

		lambda_tests "software.amazon.awssdk:aws-lambda-java-tests:1.1.1"

		cache "com.github.ben-manes.caffeine:caffeine:3.1.8"

		jackson "com.fasterxml.jackson.core:jackson-core:${dependencyVersions.jackson_version}",
				"com.fasterxml.jackson.core:jackson-databind:${dependencyVersions.jackson_version}",
				"com.fasterxml.jackson.core:jackson-annotations:${dependencyVersions.jackson_version}",
				"com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${dependencyVersions.jackson_version}",
				"com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${dependencyVersions.jackson_version}",
				"javax.annotation:javax.annotation-api:1.3.2",
				"javax.validation:validation-api:2.0.1.Final",
				"javax.el:javax.el-api:3.0.0",
				"org.glassfish:javax.el:3.0.0"

		soap 	"com.sun.xml.messaging.saaj:saaj-impl:1.5.3",
				"org.apache.cxf:cxf-rt-frontend-jaxws:3.4.5",
				"org.apache.cxf:cxf-rt-transports-http:3.4.5"

		powertools "software.amazon.lambda:powertools-logging:${dependencyVersions.powertools_version}",
				"software.amazon.lambda:powertools-metrics:${dependencyVersions.powertools_version}",
				"software.amazon.lambda:powertools-tracing:${dependencyVersions.powertools_version}",
				"software.amazon.lambda:powertools-parameters:${dependencyVersions.powertools_version}"

		tests "org.junit.jupiter:junit-jupiter-api:${dependencyVersions.junit}",
				"org.junit.jupiter:junit-jupiter-params:${dependencyVersions.junit}",
				"org.mockito:mockito-junit-jupiter:${dependencyVersions.mockito}",
				"org.mockito:mockito-inline:${dependencyVersions.mockito}",
				"org.hamcrest:hamcrest:2.2"

		test_runtime "org.junit.jupiter:junit-jupiter-engine:${dependencyVersions.junit}"

		logging_runtime "com.amazonaws:aws-lambda-java-log4j2:1.6.0"

		hibernate "org.hibernate.validator:hibernate-validator:7.0.1.Final",
				"org.hibernate:hibernate-validator-annotation-processor:7.0.1.Final"

		lambda_tests "software.amazon.awssdk:aws-lambda-java-tests:1.1.1"

		nimbus "com.nimbusds:oauth2-oidc-sdk:${dependencyVersions.nimbusds_oauth_version}",
				"com.nimbusds:nimbus-jose-jwt:${dependencyVersions.nimbusds_jwt_version}"

		cri_common_lib "uk.gov.account:cri-common-lib:${dependencyVersions.cri_common_lib}"

		pact_tests "au.com.dius.pact.provider:junit5:${dependencyVersions.pact_provider_version}",
				"au.com.dius.pact:provider:${dependencyVersions.pact_provider_version}"

		webcompere "uk.org.webcompere:system-stubs-core:${dependencyVersions.webcompere_version}",
				"uk.org.webcompere:system-stubs-jupiter:${dependencyVersions.webcompere_version}"
	}

	apply plugin: 'java'

	test {
		// Configures environment variable to avoid initialization of AWS X-Ray segments for each tests
		environment "LAMBDA_TASK_ROOT", "handler"
		filter {
			excludeTestsMatching "uk.gov.di.ipv.cri.kbv.acceptancetest.journey.*"
		}
	}


	tasks.register("pactTests", Test) {
		useJUnitPlatform {
			includeTags 'Pact'
		}
	}
}

sonar {
	properties {
		property "sonar.projectKey", "ipv-cri-kbv-api"
		property "sonar.organization", "govuk-one-login"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

spotless {
	java {
		target "**/src/**/*.java"
		googleJavaFormat("1.13.0").aosp()
		importOrder "", "javax", "java", "\\#"
		endWithNewline()
	}
	groovyGradle {
		target '**/*.gradle'
		greclipse()
		trimTrailingWhitespace()
		endWithNewline()
	}
}

clean.doFirst {
	delete "${rootDir}/dist/"
	delete "${rootDir}/.aws-sam"
}

gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xlint:unchecked"
	}
}

defaultTasks 'clean', 'spotlessApply', 'build'
